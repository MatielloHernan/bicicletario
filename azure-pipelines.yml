trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
# Restaurando pacotes
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  displayName: 'Restore NuGet packages'

# Construindo o projeto
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'Build project'

# Executando testes
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'Run tests'

# Publicando o projeto
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output publish_output'
  displayName: 'Publish project'

# Configurando a Análise do SonarCloud
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'bicicletarioAPI'
    scannerMode: 'MSBuild'
    projectKey: 'BicicletarioAPI'
    extraProperties: |
      sonar.exclusions=**/obj/**,**/bin/**

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Analysis'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarCloud Analysis Results'

# Implantação no Azure App Service
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'dev!'  # Nome da sua assinatura
    appType: 'webApp'
    WebAppName: 'bicicletario'  # Nome do seu app no Azure
    deployToSlotOrASE: true
    ResourceGroupName: 'dev'  # Nome do seu grupo de recursos
    SlotName: 'staging'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    RuntimeStack: 'DOTNETCORE|3.1'
    StartupCommand: 'dotnet BicicletarioAPI.dll'
