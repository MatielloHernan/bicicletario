trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildPlatformSonar: 'Any CPU'

jobs:
  - job: Build
    strategy:
      matrix:
        Application:
          projectName: 'BicicletarioAPI.Application'
        Domain:
          projectName: 'BicicletarioAPI.Domain'
        Infrastructure:
          projectName: 'BicicletarioAPI.Infrastructure'
        WebAPI:
          projectName: 'BicicletarioAPI.WebAPI'
        Root:
          projectName: 'BicicletarioAPI'
    steps:
      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

      - task: VSBuild@1
        inputs:
          solution: '**/$(projectName).csproj'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'

  - job: Test
    dependsOn: Build
    steps:
      - task: VSTest@2
        inputs:
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          testAssemblyVer2: |
            **/BicicletarioAPI.Tests.dll
          runTestsInIsolation: true

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '**/*.trx'
          mergeTestResults: true
          failTaskOnFailedTests: true

  - job: SonarCloud
    dependsOn: Test
    steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'Bicicletario Sonar'
          organization: 'bicicletario'  # Nome da sua organização no SonarCloud
          scannerMode: 'MSBuild'
          projectKey: 'rafael-ventura_bicicletario'  # Chave do seu projeto no SonarCloud
          projectName: 'bicicletario'  # Nome do seu projeto no SonarCloud
          extraProperties: |
            sonar.exclusions=**/bin/**,**/obj/**,**/*.dll,**/*.pdb
            sonar.cs.vstest.reportsPaths=$(Common.TestResultsDirectory)/*.trx

      - task: SonarCloudAnalyze@1

      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

  - job: PublishArtifacts
    dependsOn: SonarCloud
    steps:
      # Publicando o projeto
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        displayName: 'Publish project'

      # Publicando os artefatos para serem usados no pipeline de CD
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop'
          publishLocation: 'Container'
