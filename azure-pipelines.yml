name: CI

trigger:
- main

pool:
   vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

jobs:

- job: BuildTestAnalyzeDeploy
  displayName: 'Build, Test, Analyze and Deploy'

  steps:
     # Limpando a solução
    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'clean'
      displayName: 'Clean solution'
  
    # Restaurando pacotes
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      displayName: 'Restore NuGet packages'


    # Construindo o projeto
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'Build project'

    # Executando testes
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'Run tests'

    # Configurando a Análise do SonarCloud
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Bicicletario Sonar'
        organization: 'bicicletario'  # Nome da sua organização no SonarCloud
        scannerMode: 'MSBuild'
        projectKey: 'rafael-ventura_bicicletario'  # Chave do seu projeto no SonarCloud
        extraProperties: |
          sonar.exclusions=**/obj/**,**/bin/**

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud Analysis'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarCloud Analysis Results'

    # Publicando o projeto
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output publish_output'
      displayName: 'Publish project'
    - publish: $(System.DefaultWorkingDirectory)/publish_output
      artifact: drop
