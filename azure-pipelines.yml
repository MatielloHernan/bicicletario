name: CI

trigger:
- main

pool:
   vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

jobs:
- job: BuildTestAnalyzeDeploy
  displayName: 'Build, Test, Analyze and Deploy'
  steps:
    # Limpando a solução
    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'clean'
        projects: '**/*.csproj'
      displayName: 'Clean solution'

    # Restaurando o SDK do .NET 7.0
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    # Restaurando pacotes
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      displayName: 'Restore NuGet packages'

    # Construindo os projetos individualmente
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'Application/Application.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/Application'
      displayName: 'Build Application'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'Domain/Domain.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/Domain'
      displayName: 'Build Domain'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'Infrastructure/Infrastructure.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/Infrastructure'
      displayName: 'Build Infrastructure'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'WebAPI/WebAPI.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/WebAPI'
      displayName: 'Build WebAPI'

     # Executando testes com coleta de cobertura de código
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'
      displayName: 'Run tests with code coverage'

    # Configurando a Análise do SonarCloud
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Bicicletario Sonar'
        organization: 'bicicletario'
        scannerMode: 'MSBuild'
        projectKey: 'rafael-ventura_bicicletario'
        extraProperties: |
          sonar.exclusions=**/obj/**,**/bin/**
          sonar.cs.vscoveragexml.reportsPaths=$(Agent.TempDirectory)/**/TestResults/**/*.coveragexml


    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud Analysis'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarCloud Analysis Results'

    # Publicando o projeto
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output publish_output'
      displayName: 'Publish project'
    - publish: $(System.DefaultWorkingDirectory)/publish_output
      artifact: drop
